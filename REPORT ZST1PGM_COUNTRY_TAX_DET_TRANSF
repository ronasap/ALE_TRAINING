*&---------------------------------------------------------------------*
*& Report ZST1PGM_COUNTRY_TAX_DET_TRANSF
*&---------------------------------------------------------------------*
*&
*&---------------------------------------------------------------------*
REPORT ZST1PGM_COUNTRY_TAX_DET_TRANSF.
CLASS lcl_cntry_tax DEFINITION.

  PUBLIC SECTION.

    CONSTANTS  : c_idcotype TYPE edidc-idoctp VALUE 'ZCNTRY_TAX_IDOC',

                             c_msgtype TYPE edidc-mestyp VALUE  'ZST1CNTRY_TAX_MSG',

                             c_port TYPE edidc-rcvpor VALUE 'A000000005',

                             c_rec_part_type TYPE edidc-rcvprt VALUE 'LS',

                             c_rec_sys TYPE edidc-rcvprn VALUE 'S5MCLNT200',

                            c_sndr_part_type TYPE edidc-sndprt VALUE 'LS',

                            c_sndr_sys TYPE edidc-sndprn VALUE 'S5MCLNT200'.

    DATA : coun_code TYPE zst1cntry_tax_co-country,

                lt_cnty_tax TYPE TABLE OF zst1cntry_tax_co,

                ls_cnty_tax TYPE zst1cntry_tax_co,

                lt_data TYPE TABLE OF edidd,

                ls_data TYPE edidd,

                lt_comm_idoc TYPE TABLE OF edidc,

                ls_comm_idoc TYPE edidc,

                ls_control TYPE edidc.

    METHODS : constructor IMPORTING i_coun_code TYPE zst1cntry_tax_co-country,

                        prepare_data,

                        prepare_cntl_data,

                        send_idoc.

ENDCLASS.                    "lcl_cntry_tax DEFINITION

CLASS lcl_cntry_tax IMPLEMENTATION.

  METHOD constructor.

    coun_code = i_coun_code.

  ENDMETHOD.                    "constructor

  METHOD prepare_data.

    DATA : ls_seg TYPE ZST1CNTRY_TAX_CO_seg.

    SELECT  * FROM zst1cntry_tax_co INTO TABLE  lt_cnty_tax WHERE country = coun_code.

    IF sy-subrc = 0.

      LOOP AT lt_cnty_tax INTO ls_cnty_tax.

        ls_data-segnam  = 'ZST1CNTRY_TAX_CO_seg'. " segment name

        ls_seg-country = ls_cnty_tax-country.

        ls_seg-tax_code = ls_cnty_tax-tax_code.

        ls_data-sdata = ls_seg.

        APPEND ls_data TO lt_data.

        CLEAR ls_data.

      ENDLOOP.

    ELSE.

      MESSAGE 'No record found' TYPE 'E'.

    ENDIF.

  ENDMETHOD.                    "prepare_data

  METHOD prepare_cntl_data.

    ls_control-idoctp = c_idcotype.

    ls_control-mestyp = c_msgtype.

    ls_control-rcvpor = c_port.

    ls_control-rcvprt = c_rec_part_type .

    ls_control-rcvprn = c_rec_sys.

    ls_control-sndprt = c_sndr_part_type .

    ls_control-sndprn = c_sndr_sys.

  ENDMETHOD.                    "prepare_cntl_data

  METHOD send_idoc.

    CALL FUNCTION 'MASTER_IDOC_DISTRIBUTE'

      EXPORTING

        master_idoc_control            = ls_control

*       OBJ_TYPE                       = ”

*       CHNUM                          = ”

      TABLES

        communication_idoc_control     = lt_comm_idoc

        master_idoc_data               = lt_data

      EXCEPTIONS

        error_in_idoc_control          = 1

        error_writing_idoc_status      = 2

        error_in_idoc_data             = 3

        sending_logical_system_unknown = 4

        OTHERS                         = 5.

    IF sy-subrc = 0.

      LOOP AT lt_comm_idoc INTO ls_comm_idoc.

        WRITE :/ 'Idoc Generated : ', ls_comm_idoc-docnum.

      ENDLOOP.

    ENDIF.

  ENDMETHOD.                    "send_idoc

ENDCLASS.                    "lcl_cntry_tax IMPLEMENTATION

START-OF-SELECTION.

  PARAMETERS : p_cntry TYPE zst1cntry_tax_co-country.

  DATA  : obj TYPE REF TO lcl_cntry_tax.

  CREATE OBJECT obj

    EXPORTING

      i_coun_code = p_cntry.

  CALL METHOD obj->prepare_data.

  CALL METHOD obj->prepare_cntl_data.

  CALL METHOD obj->send_idoc.
